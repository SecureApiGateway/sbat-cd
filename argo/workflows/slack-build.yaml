apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: slack-sensor
  annotations:
    workflows.argoproj.io/description: >-
      This task takes the body of a slack post request and 
      extracts environment data from it
    workflows.argoproj.io/tags: argocd
    workflows.argoproj.io/version: '>= 2.9.0'
spec:
  entrypoint: slack-sensor
  arguments:
    parameters:
      - name: text
        value: dev
  templates:
  - name: slack-sensor
    steps:
    - - name: parse-body
        template: slack-body
        arguments:
          parameters:
          - name: text
            value: "{{workflow.parameters.text}}"
    - - name: environment
        template: create-env
        arguments:
          parameters:
          - name: namespace
            value: "{{steps.parse-body.outputs.parameters.namespace}}"
    - - name: slack-notify
        template: slack-notify
        arguments:
          parameters:
          - name: namespace
            value: "{{steps.parse-body.outputs.parameters.namespace}}"

  - name: slack-body
    inputs:
      parameters:
      - name: text
        value: dev
    script:
      image: dwdraju/alpine-curl-jq
      command: [bash]
      source: |
        text="$(echo '{{inputs.parameters.text}}' | jq -r .text)"
        echo $text | cut -f1 -d ' ' > /tmp/namespace.txt
        echo $text | awk -F 'tag=' '{print $2}' | cut -d ' ' -f1 > /tmp/tag.txt
        echo $text | awk -F 'service=' '{print $2}' | cut -d ' ' -f1 > /tmp/service.txt
    outputs:
      parameters:
      - name: namespace
        valueFrom:
          path: /tmp/namespace.txt
      - name: tag
        valueFrom:
          path: /tmp/tag.txt
      - name: application-name
        valueFrom:
          path: /tmp/service.txt
  
  - name: create-env
    inputs:
      parameters:
      - name: namespace
        value: dev
      - name: clean
        value: true
    steps:
      - - name: create-environment
          templateRef:
            name: create-environment
            template: create-environment
          arguments:
            parameters:
            - name: namespace
              value: "{{inputs.parameters.namespace}}"
            - name: clean
              value: "{{inputs.parameters.clean}}"
  
  - name: slack-notify
    inputs:
      parameters:
      - name: namespace
        value: dev
    steps:
      - - name: slack-rebuild-notify
          templateRef:
            name: slack-rebuild-notify
            template:  slack-notify
          arguments:
            parameters:
            - name: namespace
              value: "{{inputs.parameters.namespace}}"
  